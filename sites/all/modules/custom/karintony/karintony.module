<?php
/**
 * @file
 * Code for the Karin and Tony feature.
 */

include_once 'karintony.features.inc';
include_once 'karintony.theme.inc';
module_load_include('inc', 'node', 'node.admin');
module_load_include('inc', 'node', 'content_types');
module_load_include('inc', 'node', 'node.pages');

/**
 * Implements hook_menu().
 */
function karintony_menu() {

  $items['file/%file/kt-detail'] = array(
    'title callback' => 'entity_label',
    'title arguments' => array('file', 1),
    // The page callback also invokes drupal_set_title() in case
    // the menu router's title is overridden by a menu link.
    'page callback' => 'karin_tony_file_entity_view_page',
    'page arguments' => array(1, 'kt-detail'),
    'access callback' => 'file_entity_access',
    'access arguments' => array('view', 1),
    'file' => 'karintony.pages.inc',
  );
  $items['admin/custom/karin-tony'] = array(
  	'title' => 'Karin and Tony',
    'description' => 'Administer Karin and Tony.',
    'weight' => -8,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'menu_name' => 'management'
  );
  node_type_cache_reset();
  
    $type = 'flexslider_example';
    $type_url_str = str_replace('_', '-', $type);
    $items['create-gallery'] = array(
      'type' => MENU_CALLBACK,
      'title' => 'Create gallery',
      'title callback' => 'check_plain',
      'page callback' => '_gallery_node_add',
      'page arguments' => array($type),
      'access callback' => 'node_access',
      'access arguments' => array('create', $type),
    );
    
  return $items;
}



/**
* Implements hook_entity_info_alter().
*/
function karintony_entity_info_alter(&$entity_info) {
  $entity_info['file']['view modes']['kt_detail'] = array(
    'label' => t('KT Detail'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['masonry'] = array(
    'label' => t('Masonry'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['tiny_thumb'] = array(
    'label' => t('Tiny Thumb'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['kt_teaser'] = array(
    'label' => t('Tiny Thumb'),
    'custom settings' => TRUE,
  );
}
/**
 *
 */
function _gallery_node_add($type) {
  global $user;

  $types = node_type_get_types();
  $node = (object) array('uid' => $user->uid, 'name' => (isset($user->name) ? $user->name : ''), 'type' => $type, 'language' => LANGUAGE_NONE);
  drupal_set_title(t('Create @name', array('@name' => $types[$type]->name)), PASS_THROUGH);
  $output = drupal_get_form($type . '_node_form', $node);
  $output['field_flexslider_example_slidesh']['#access'] = FALSE;
  print drupal_render($output);
  exit;
}

/**
 * Implements hook_init().
 */
function karintony_init() {
  drupal_add_css(drupal_get_path('module', 'karintony') .'/karintony.css');

}

/**
 * Implements hook_theme().
 */
function karintony_theme() {
  return array(
    'kt_detail' => array(
      'variables' => array(
        'file' => NULL,
      ),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function karintony_block_info() {
  $blocks['my_galleries'] = array(
    'info' => t('My Galleries'),
    'cache' => DRUPAL_CACHE_PER_USER,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function karintony_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'my_galleries':
      $block['subject'] = FALSE; // t('Syndicate');
      $block['content'] = array(
        '#markup' => _my_galleries_content(),
      );
      break;
  }
  return $block;
}
